public void PopulateListOfOBSProviderEntityWithOBSID(ref List<OBSProviderEntity> listOfOBSProviderEntity)
{
    Log.Info("Populating SymbolNames with OBS Ids...");

    StringBuilder queryBuilder;

    int prionRetries = 0;
    bool prionQuerySuccessful = false;

    int count = 0;
    int globalCount = 0;
    List<String> chunk = new List<string>();

    foreach (OBSProviderEntity OBSProviderEntityInstance in listOfOBSProviderEntity)
    {
        chunk.Add(OBSProviderEntityInstance.PermPath);
        count++;
        globalCount++;

        if ((count >= 100 || (listOfOBSProviderEntity.Count == globalCount) && count > 0))
        {
            queryBuilder = new StringBuilder();
            foreach (string permpath in chunk.ToArray())
            {
                if (!string.IsNullOrEmpty(permpath) && !string.IsNullOrEmpty(permpath.Trim()))
                {
                    queryBuilder.Append("PERMPATH_CURVEPATH == '");
                    queryBuilder.Append(permpath);
                    queryBuilder.Append("' | ");
                }
            }

            // Remove last OR bit...
            if (queryBuilder.Length > 0)
            {
                queryBuilder.Length -= 3; // Remove the last three characters

                string resultType = "PERMPATH_OBJECT";
                string[] prionResults = null;
                prionRetries = 0;
                prionQuerySuccessful = false;
                while (prionRetries <= 1 && !prionQuerySuccessful)
                {
                    try
                    {
                        prionResults = Prion.Instance.PosRequest(queryBuilder.ToString(), resultType);
                        prionQuerySuccessful = true;
                    }
                    catch (Exception ex)
                    {
                        // log the error
                        Log.Error("Error querying Prion with query: " + queryBuilder.ToString());

                        // try again
                        prionRetries++;
                        if (prionRetries <= 1)
                            Log.Error("Retrying Prion query ...");
                        else
                            prionQuerySuccessful = false;
                    }
                }

                if (prionQuerySuccessful)
                {
                    if (prionResults != null)
                    {
                        foreach (string prionResult in prionResults)
                        {
                            try
                            {
                                XmlDocument doc = new XmlDocument();
                                doc.LoadXml(prionResult);

                                XmlNode permPathOBSID = doc.SelectSingleNode("/*[local-name()='PERMPATH_OBJECT']/*[local-name()='PERMPATH_CURVEPATH']");
                                XmlNode nodeOBSID = doc.SelectSingleNode("/*[local-name()='PERMPATH_OBJECT']/*[local-name()='PERMPATH_CURVEID']");

                                if (permPathOBSID != null && nodeOBSID != null)
                                {
                                    List<OBSProviderEntity> tempList = listOfOBSProviderEntity
                                        .Where(t => t.PermPath == permPathOBSID.InnerText)
                                        .ToList();

                                    if (tempList.Count >= 1)
                                    {
                                        OBSProviderEntity tempProviderEntity = tempList[0];
                                        tempProviderEntity.OBSID = nodeOBSID.InnerText;
                                    }
                                    else
                                    {
                                        Log.Error("Error populating OBSID for PermPath='" + permPathOBSID.InnerText + "'");
                                    }
                                }
                                else
                                {
                                    Log.Error("PermPath or OBSID is NULL in Prion result.");
                                }
                            }
                            catch (Exception ex)
                            {
                                Log.Error("Error analyzing a result from Prion. Message: " + ex.Message, ex);
                            }
                        }
                    }

                    queryBuilder.Length = 0; // Clear the StringBuilder
                    Log.Info(string.Format("Processed '{0}' curves from Prion service (OBS ID population).", globalCount));
                    count = 0;
                }
            }
            else
            {
                Log.Warn("No valid PERMPATH values found in the chunk.");
            }
        }
    }

    Log.Info("SymbolNames populated with OBS IDs successfully.");
}
