$fileContent = Get-Content -Path "path/to/file.txt" -Raw

$patterns = @(
    "pattern1",
    "pattern2",
    "pattern3"
)

$matches = foreach ($pattern in $patterns) {
    Select-String -InputObject $fileContent -Pattern $pattern -AllMatches
}

foreach ($match in $matches) {
    $pattern = $match.Pattern
    $matchCount = $match.Matches.Count
    Write-Host "Pattern '$pattern' found $matchCount times in the file."
}


$fileContent = Get-Content -Path "path/to/file.txt" -Raw

$patterns = @(
    "pattern1",
    "pattern2",
    "pattern3"
)

foreach ($pattern in $patterns) {
    $matches = Select-String -InputObject $fileContent -Pattern $pattern -AllMatches
    $matchCount = $matches.Matches.Count
    Write-Host "Pattern '$pattern' found $matchCount times in the file."
}


$fileContent = Get-Content -Path "path/to/file.txt" -Raw

$patterns = @(
    "pattern1",
    "pattern2",
    "pattern3"
)

$patternCounts = @{}

foreach ($pattern in $patterns) {
    $matches = Select-String -InputObject $fileContent -Pattern $pattern -AllMatches
    $matchCount = $matches.Matches.Count
    $patternCounts[$pattern] = $matchCount
}

$customObject = $patternCounts | ForEach-Object { [PSCustomObject]@{ Pattern = $_.Key; Count = $_.Value } }

$customObject

function Search-PatternInFile {
    $pattern = "apple|banana|orange"
    $file = "C:\path\to\file.txt"

    # Use Select-String to search for the pattern in the file
    $matchingLines = Get-Content $file | Select-String -Pattern $pattern

    $result = @{}

    # Count the occurrences of each match
    foreach ($line in $matchingLines) {
        $match = $line.Matches.Value

        if ($result.ContainsKey($match)) {
            $result[$match] += 1
        } else {
            $result[$match] = 1
        }
    }

    $totalCount = $matchingLines.Count

    # Return a hashtable containing the matches and counts
    return @{
        Matches = $result
        TotalCount = $totalCount
    }
}

# Call the function and store the result in a variable
$result = Search-PatternInFile

# Display the matches and counts
foreach ($match in $result.Matches.Keys) {
    $count = $result.Matches[$match]
    Write-Output "Match: $match Count: $count"
}

# Display the total summary count
$totalCount = $result.TotalCount
Write-Output "Total Summary Count: $totalCount"
